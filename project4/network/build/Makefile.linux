# -*- Makefile -*-

# TARGET_CC_PREFIX if needed for cross-compilation.
#  see where used in Makefile.common
#TARGET_CC_PREFIX := i386-elf-

include Makefile.common
#use on old qemu:
# RANDOM_PORT ?= $(shell $(PROJECT_ROOT)/scripts/random_port)
# RANDOM_PORT =1234
# RANDOM_PORT ?= 1234

# new qemu format.  OLD qemu format set for linuxlab.
QEMU_DEBUG_OPT ?= -S -gdb tcp::$(RANDOM_PORT)

# uncomment the next line if using an older qemu.
# QEMU_VGA_OPT=-std-vga
QEMU_VGA_OPT ?= -vga std 
# remove -no-kqemu if your version complains about it.  older 
# versions complained about not having it.  
QEMU ?= /usr/bin/qemu -no-kqemu

run : all
	$(QEMU) $(QEMU_VGA_OPT) $(QEMU_NETOPTS) -no-acpi diskc.img

# build an ISO CD-rom image
iso: all fd_aug.img
	@-mkdir boot
	cp diskc.img boot
	cp fd_aug.img boot
	mkisofs -o cd.iso -hard-disk-boot -b diskc.img	boot
	# mkisofs -o cd.iso -b fd_aug.img	boot

cdrun:	iso
	$(QEMU) $(QEMU_VGA_OPT) -boot d -cdrom cd.iso

dbgcd : all
	$(QEMU) $(QEMU_VGA_OPT)  -s -S $(QEMU_VGA_OPT) -boot d -cdrom cd.iso

dbgrun : all
	echo "target remote localhost:$(RANDOM_PORT)" > .gdbinit
	$(QEMU) -no-fd-bootchk -m 10 $(QEMU_DEBUG_OPT) $(QEMU_VGA_OPT) -no-acpi diskc.img -hdb diskd.img

dbg : all
	gdb geekos/kernel.exe

qemu:
	wget www.cs.umd.edu/~ntg/qemu/qemu
	chmod a+x qemu

#note: if in linuxlab then:
BIOSLOCATION:= -L /usr/local/qemu-0.10.5/share/qemu
printrun: qemu all
	./qemu -no-fd-bootchk -m 3 --vga std -curses -no-acpi diskc.img -hdb diskd.img -port-e9 file:out.txt $(BIOSLOCATION)

include depend.mak
